.data
str:
	.byte 	2,3,1,6,4,8,7,5
.global	_boot
.section .boot,"ax"
_boot:
	bl	COM_init
	ldr	r0,=str
	mov	r1,#8
	mov	r2,r1
	ldr	r3,=str
sort:
	mov	r2,#0
loop1:
	mov	r3,#0
loop2:
	add	r4,r3,#1
	mov	r5,r0
	add	r5,r5,r3
	ldrb r6,[r5]
	mov	r5,r0
	add	r5,r5,r4
	ldrb r7,[r5]
	cmp	r6,r7
	blt	next
	mov  r5,r0
	add	r5,r5,r3
	strb r7,[r5]
	mov	r5,r0
	add	r5,r5,r4
	strb r6,[r5]
next:
	add	r3,r3,#1
	mov	r5,r1
	sub	r5,r5,#1
	sub	r5,r5,r2
	cmp	r3,r5
	bne	loop2
	add	r2,r2,#1
	mov	r5,r1
	sub	r5,r5,#1
	cmp	r2,r5
	bne	loop1
pri_after:
	ldrb	r4,[r0]
	add 	r0,r0,#1
	sub	r1,r1,#1
	bl	COM_SUB
	cmp	r1,#0
	bne	pri_after
	b	.



COM_init:
	ldr	r0,=0xF80007C0
	mov	r1,#0x000026E0
	str	r1,[r0]
	ldr	r0,=0xF80007C4
	mov	r1,#0x000026E0
	str	r1,[r0]
	ldr	r0,=0xF8000154
	mov	r1,#0x00001402
	str	r1,[r0]
	ldr	r0,=0xE0001000
	mov	r1,#0x00000017
	str	r1,[r0]
	ldr	r0,=0xE0001004
	mov	r1,#0x00000020
	str	r1,[r0]
	ldr	r0,=0xE0001018
	mov	r1,#62
	str	r1,[r0]
	ldr	r0,=0xE0001034
	mov	r1,#6
	str	r1,[r0]
	mov	pc,lr
COM_SUB:
	ldr	r6,=0xE000102C
	ldr	r5,[r6]
	and	r5,r5,#0x10
	cmp	r5,#0x10
	beq	COM_SUB
	ldr	r6,=0xE0001030
	mov	r7,r4
	str	r7,[r6]
	mov	pc,lr
.end
